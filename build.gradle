buildscript {
    ext {
        springBootVersion = '2.6.4'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}


apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'


group 'com.artsourcing'
version '1.0-SNAPSHOT'
sourceCompatibility = 17

repositories {
    mavenCentral()
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.apache.httpcomponents:httpcore:4.4.15'
    implementation 'org.apache.httpcomponents:httpclient:4.5.13'
    implementation 'net.minidev:json-smart:2.4.8'

    //lombok
    implementation 'org.projectlombok:lombok'
    implementation 'org.jetbrains:annotations:20.1.0'
    annotationProcessor 'org.projectlombok:lombok'

    //jpa
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')

    //jdbc
    implementation('org.springframework.session:spring-session-jdbc')
    //db
    implementation('org.springframework.boot:spring-boot-starter-jdbc')
    implementation('com.microsoft.sqlserver:mssql-jdbc')

    //test spring
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    //junit
    //testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    //testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    testImplementation platform('org.junit:junit-bom:5.8.2')
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

jar {
    manifest {
        attributes 'Main-Class': 'com.artsourcing.Application'
    }
    from {
        configurations.runtimeClasspath.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}
